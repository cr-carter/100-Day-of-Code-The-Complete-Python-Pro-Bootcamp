# The purpose of this project is to practice creating classes, working with dictionaries,
# and using for loops to loop through dictionaries. I also am gaining experience importing
# classes, lists, etc. from other sources. Lastly, I gained practice importing and converting
# jsons to dictionary items.

#main.py
from question_model import Question
from data import question_data
from quiz_brain import QuizBrain

question_bank = []

for item in question_data:
    question_text = item["text"]
    question_answer = item["answer"]
    question_bank.append(Question(question_text, question_answer))

print(question_bank)

quiz = QuizBrain(question_bank)

print(f"Answer the following {len(quiz.question_list)} true/false questions.\n")

while quiz.still_has_question():
    quiz.next_question()

print("You've completed the quiz.")
print(f"Your final score is: {quiz.score}/{quiz.question_number}")



#question_model.py
class Question:

    def __init__(self, question, answer):
        self.question = question
        self.answer = answer



#data.py
import requests
import json

response = requests.get('https://opentdb.com/api.php?amount=20')
question_import = json.loads(response.text)
questions = question_import["results"]
question_data = []
for item in questions:
    if item["type"] == "boolean":
        question_data.append({"text": item["question"], "answer": item["correct_answer"]})



#quiz_brain.py
class QuizBrain:
    def __init__(self, questions):
        self.question_number = 0
        self.question_list = questions
        self.score = 0

    def still_has_question(self):
        return self.question_number < len(self.question_list)

    def next_question(self):
        user_answer = ""
        current_question = self.question_list[self.question_number]
        while user_answer.lower() not in ("true", "false"):
            user_answer = ""
            user_answer = input(f"Q{self.question_number + 1}: {current_question.question} (True/False)\n")
        self.question_number += 1
        self.check_answer(user_answer, current_question.answer)

    def check_answer(self, user_answer, correct_answer):
        if user_answer.lower() == correct_answer.lower():
            print("Correct!")
            self.score += 1
        else:
            print("Incorrect")
        print(f"The correct answer is: {correct_answer}\nYour current score is {self.score}/{self.question_number}\n")
